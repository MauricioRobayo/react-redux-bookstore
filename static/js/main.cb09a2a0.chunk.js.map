{"version":3,"sources":["components/Book.js","config/index.js","redux/actions/index.js","components/CategoryFilter.js","components/Header.js","containers/BooksList.js","containers/BooksForm.js","components/App.js","redux/reducers/book.js","redux/reducers/filter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Book","book","handleRemoveBook","className","src","thumbnail","alt","category","title","id","type","onClick","bookCategories","getRandomBooks","dispatch","fetchCategory","a","fetch","response","json","Promise","all","map","then","booksByCategory","books","index","items","filter","volumeInfo","imageLinks","smallThumbnail","sort","Math","random","slice","floor","replace","flat","Filter","handleFilterChange","htmlFor","onChange","event","target","value","categories","key","Header","children","BooksList","removeBook","props","changeFilter","this","CategoryFilter","length","Component","connect","BooksForm","handleChange","name","setState","handleSubmit","preventDefault","state","createBook","uniqid","reset","renderCategories","disabled","hidden","onSubmit","placeholder","App","action","currBook","reducers","combineReducers","middleware","applyMiddleware","thunk","logger","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb09a2a0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Book = ({ book, handleRemoveBook }) => (\n  <div className=\"Book\">\n    <img src={book.thumbnail} alt=\"\" />\n    <div className=\"Book-category\">{book.category}</div>\n    <h2 className=\"Book-title\">{book.title}</h2>\n    <div className=\"Book-id\">{book.id}</div>\n    <button\n      className=\"Book-remove\"\n      type=\"button\"\n      onClick={() => handleRemoveBook(book)}\n    >\n      Remove\n    </button>\n  </div>\n);\n\nBook.propTypes = {\n  book: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    category: PropTypes.string,\n    thumbnail: PropTypes.string,\n  }).isRequired,\n  handleRemoveBook: PropTypes.func.isRequired,\n};\n\nexport default Book;\n","const bookCategories = [\n  'Action',\n  'Biography',\n  'History',\n  'Horror',\n  'Kids',\n  'Learning',\n  'Science Fiction',\n];\n\nexport default bookCategories;\n","import bookCategories from '../../config';\n\nconst createBook = (book) => ({\n  type: 'CREATE_BOOK',\n  book,\n});\n\nconst removeBook = (book) => ({\n  type: 'REMOVE_BOOK',\n  book,\n});\n\nconst changeFilter = (filter) => ({\n  type: 'CHANGE_FILTER',\n  filter,\n});\n\nconst getRandomBooks = (dispatch) => {\n  const fetchCategory = async (category) => {\n    const response = await fetch(\n      `https://www.googleapis.com/books/v1/volumes?q=subject:${category}&maxResults=40`\n    );\n    return response.json();\n  };\n\n  Promise.all(bookCategories.map(fetchCategory)).then((booksByCategory) => {\n    const books = booksByCategory\n      .map(({ items }, index) =>\n        items\n          .filter(\n            ({ volumeInfo: { imageLinks: { smallThumbnail = '' } = {} } }) =>\n              smallThumbnail !== ''\n          )\n          .sort(() => 0.5 - Math.random())\n          .slice(0, Math.floor(Math.random() * 3 + 1))\n          .map(\n            ({\n              id,\n              volumeInfo: {\n                title,\n                imageLinks: { smallThumbnail },\n              },\n            }) => ({\n              id,\n              title,\n              thumbnail: smallThumbnail.replace(/^http:/, 'https:'),\n              category: bookCategories[index],\n            })\n          )\n      )\n      .flat();\n    dispatch({ type: 'LOAD_BOOKS', books });\n  });\n};\n\nexport { createBook, removeBook, changeFilter, getRandomBooks };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport categories from '../config';\n\nconst Filter = ({ handleFilterChange }) => (\n  <label htmlFor=\"filter\">\n    Category\n    <select\n      id=\"filter\"\n      onChange={(event) => handleFilterChange(event.target.value)}\n    >\n      {['All', ...categories].map((category) => (\n        <option key={category} value={category}>\n          {category}\n        </option>\n      ))}\n    </select>\n  </label>\n);\n\nFilter.propTypes = {\n  handleFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ children }) => (\n  <header>\n    <nav>\n      <h1>Bookstore CMS</h1>\n      {children}\n    </nav>\n  </header>\n);\n\nHeader.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook, getRandomBooks, changeFilter } from '../redux/actions';\nimport CategoryFilter from '../components/CategoryFilter';\nimport Header from '../components/Header';\n\nclass BooksList extends Component {\n  componentDidMount() {\n    const { getRandomBooks } = this.props;\n    getRandomBooks();\n  }\n\n  handleRemoveBook = (book) => {\n    const { removeBook } = this.props;\n    removeBook(book);\n  };\n\n  handleFilterChange = (filter) => {\n    const { changeFilter } = this.props;\n    changeFilter(filter);\n  };\n\n  render() {\n    const { books, filter } = this.props;\n    return (\n      <>\n        <Header>\n          <CategoryFilter\n            filter={filter}\n            handleFilterChange={this.handleFilterChange}\n          />\n        </Header>\n        <div className=\"BookList\">\n          {books.length === 0 ? (\n            <div>Loading...</div>\n          ) : (\n            books\n              .filter((book) => filter === book.category || filter === 'All')\n              .map((book) => (\n                <Book\n                  key={book.id}\n                  book={book}\n                  handleRemoveBook={this.handleRemoveBook}\n                />\n              ))\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      category: PropTypes.string,\n    })\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  getRandomBooks: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ books, filter }) => ({\n  books,\n  filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeBook: (book) => dispatch(removeBook(book)),\n  changeFilter: (filter) => dispatch(changeFilter(filter)),\n  getRandomBooks: () => dispatch(getRandomBooks),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uniqid from 'uniqid';\nimport { connect } from 'react-redux';\nimport { createBook } from '../redux/actions';\nimport bookCategories from '../config';\n\nclass BooksForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      category: 'Category',\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, category } = this.state;\n    const { createBook } = this.props;\n    createBook({\n      id: uniqid(),\n      title,\n      category,\n    });\n    this.setState({\n      title: '',\n      category: 'Categories',\n    });\n    event.target.reset();\n  };\n\n  renderCategories = () =>\n    ['Category', ...bookCategories].map((category) => (\n      <option\n        disabled={category === 'Category'}\n        hidden={category === 'Category'}\n        key={category}\n        value={category}\n      >\n        {category}\n      </option>\n    ));\n\n  render() {\n    const { title, category } = this.state;\n    return (\n      <footer>\n        <form onSubmit={this.handleSubmit}>\n          <h4>Add new book</h4>\n          <div>\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              placeholder=\"Book title\"\n              value={title}\n              onChange={this.handleChange}\n            />\n            <select\n              name=\"category\"\n              id=\"category\"\n              value={category}\n              onChange={this.handleChange}\n              className={category === 'Category' ? 'inactive' : ''}\n            >\n              {this.renderCategories()}\n            </select>\n            <button type=\"submit\" value=\"\">\n              Add book\n            </button>\n          </div>\n        </form>\n      </footer>\n    );\n  }\n}\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  createBook: (book) => dispatch(createBook(book)),\n});\n\nexport default connect(null, mapDispatchToProps)(BooksForm);\n","import React from 'react';\nimport BooksList from '../containers/BooksList';\nimport BooksForm from '../containers/BooksForm';\n\nconst App = () => (\n  <div className=\"App\">\n    <BooksList />\n    <BooksForm />\n  </div>\n);\n\nexport default App;\n","const books = (state = [], action) => {\n  switch (action.type) {\n    case 'CREATE_BOOK':\n      return [...state, action.book];\n    case 'REMOVE_BOOK':\n      return state.filter((currBook) => currBook.id !== action.book.id);\n    case 'LOAD_BOOKS':\n      return action.books;\n    default:\n      return state;\n  }\n};\n\nexport default books;\n","const filter = (state = 'All', { type, filter }) => {\n  switch (type) {\n    case 'CHANGE_FILTER':\n      return filter;\n    default:\n      return state;\n  }\n};\n\nexport default filter;\n","import { combineReducers } from 'redux';\nimport books from './book';\nimport filter from './filter';\n\nconst reducers = combineReducers({\n  books,\n  filter,\n});\n\nexport default reducers;\n","import logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\n\nconst initialState = {\n  books: [],\n  filter: 'All',\n};\n\nconst middleware = applyMiddleware(thunk, logger);\n\nconst store = createStore(reducers, initialState, middleware);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}