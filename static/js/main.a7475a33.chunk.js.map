{"version":3,"sources":["components/Book.js","config/index.js","components/CategoryFilter.js","components/Header.js","containers/BooksList.js","actions/index.js","containers/BooksForm.js","components/App.js","reducers/book.js","reducers/filter.js","reducers/index.js","store.js","index.js"],"names":["Book","book","handleRemoveBook","className","category","title","id","type","onClick","bookCategories","Filter","handleFilterChange","htmlFor","onChange","event","target","value","categories","map","key","Header","children","BooksList","removeBook","props","filter","changeFilter","getRandomBooks","this","books","CategoryFilter","length","Component","connect","dispatch","fetch","then","response","json","data","docs","cover_i","toLowerCase","BooksForm","handleChange","name","setState","handleSubmit","preventDefault","state","createBook","uniqid","reset","renderCategories","disabled","hidden","onSubmit","placeholder","App","action","currBook","reducers","combineReducers","middleware","applyMiddleware","thunk","logger","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7475a33.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Book = ({ book, handleRemoveBook }) => (\n  <div className=\"Book\">\n    <div className=\"Book-category\">{book.category}</div>\n    <h2 className=\"Book-title\">{book.title}</h2>\n    <div className=\"Book-id\">{book.id}</div>\n    <button\n      className=\"Book-remove\"\n      type=\"button\"\n      onClick={() => handleRemoveBook(book)}\n    >\n      Remove\n    </button>\n  </div>\n);\n\nBook.propTypes = {\n  book: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    category: PropTypes.string,\n  }).isRequired,\n  handleRemoveBook: PropTypes.func.isRequired,\n};\n\nexport default Book;\n","const bookCategories = [\n  'Action',\n  'Biography',\n  'History',\n  'Horror',\n  'Kids',\n  'Learning',\n  'Sci-Fi',\n];\n\nexport default bookCategories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport categories from '../config';\n\nconst Filter = ({ handleFilterChange }) => (\n  <label htmlFor=\"filter\">\n    Filter by:\n    <select\n      id=\"filter\"\n      onChange={(event) => handleFilterChange(event.target.value)}\n    >\n      {['All', ...categories].map((category) => (\n        <option key={category} value={category}>\n          {category}\n        </option>\n      ))}\n    </select>\n  </label>\n);\n\nFilter.propTypes = {\n  handleFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ children }) => (\n  <header>\n    <nav>\n      <h1>Bookstore CMS</h1>\n      {children}\n    </nav>\n  </header>\n);\n\nHeader.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook, getRandomBooks, changeFilter } from '../actions';\nimport CategoryFilter from '../components/CategoryFilter';\nimport Header from '../components/Header';\n\nclass BooksList extends Component {\n  componentDidMount() {\n    const { getRandomBooks } = this.props;\n    getRandomBooks();\n  }\n\n  handleRemoveBook = (book) => {\n    const { removeBook } = this.props;\n    removeBook(book);\n  };\n\n  handleFilterChange = (filter) => {\n    const { changeFilter } = this.props;\n    changeFilter(filter);\n  };\n\n  render() {\n    const { books, filter } = this.props;\n    return (\n      <>\n        <Header>\n          <CategoryFilter\n            filter={filter}\n            handleFilterChange={this.handleFilterChange}\n          />\n        </Header>\n        <div className=\"BookList\">\n          {books.length === 0 ? (\n            <div>Loading...</div>\n          ) : (\n            books\n              .filter((book) => filter === book.category || filter === 'All')\n              .map((book) => (\n                <Book\n                  key={book.id}\n                  book={book}\n                  handleRemoveBook={this.handleRemoveBook}\n                />\n              ))\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      category: PropTypes.string,\n    })\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  getRandomBooks: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ books, filter }) => ({\n  books,\n  filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeBook: (book) => dispatch(removeBook(book)),\n  changeFilter: (filter) => dispatch(changeFilter(filter)),\n  getRandomBooks: () => getRandomBooks(dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n","const createBook = (book) => ({\n  type: 'CREATE_BOOK',\n  book,\n});\n\nconst removeBook = (book) => ({\n  type: 'REMOVE_BOOK',\n  book,\n});\n\nconst changeFilter = (filter) => ({\n  type: 'CHANGE_FILTER',\n  filter,\n});\n\nconst getRandomBooks = (dispatch) => {\n  // https://www.googleapis.com/books/v1/volumes?q=subject:fiction&filter=free-ebooks&maxResults=40\n  fetch('https://openlibrary.org/search.json?q=javascript')\n    .then((response) => response.json())\n    .then((data) => {\n      const books = data.docs\n        .filter(\n          ({ title, cover_i: id }) => title.toLowerCase() !== 'javascript' && id\n        )\n        .map(({ cover_i: id, title, type: category }) => ({\n          id,\n          title,\n          category,\n        }));\n      dispatch({ type: 'LOAD_BOOKS', books });\n    });\n};\n\nexport { createBook, removeBook, changeFilter, getRandomBooks };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uniqid from 'uniqid';\nimport { connect } from 'react-redux';\nimport { createBook } from '../actions';\nimport bookCategories from '../config';\n\nclass BooksForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      category: 'Category',\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, category } = this.state;\n    const { createBook } = this.props;\n    createBook({\n      id: uniqid(),\n      title,\n      category,\n    });\n    this.setState({\n      title: '',\n      category: 'Categories',\n    });\n    event.target.reset();\n  };\n\n  renderCategories = () =>\n    ['Category', ...bookCategories].map((category) => (\n      <option\n        disabled={category === 'Category'}\n        hidden={category === 'Category'}\n        key={category}\n        value={category}\n      >\n        {category}\n      </option>\n    ));\n\n  render() {\n    const { title, category } = this.state;\n    return (\n      <footer>\n        <form onSubmit={this.handleSubmit}>\n          <h4>Add new book</h4>\n          <div>\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              placeholder=\"Book title\"\n              value={title}\n              onChange={this.handleChange}\n            />\n            <select\n              name=\"category\"\n              id=\"category\"\n              value={category}\n              onChange={this.handleChange}\n              className={category === 'Category' ? 'inactive' : ''}\n            >\n              {this.renderCategories()}\n            </select>\n            <button type=\"submit\" value=\"\">\n              Add book\n            </button>\n          </div>\n        </form>\n      </footer>\n    );\n  }\n}\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  createBook: (book) => dispatch(createBook(book)),\n});\n\nexport default connect(null, mapDispatchToProps)(BooksForm);\n","import React from 'react';\nimport BooksList from '../containers/BooksList';\nimport BooksForm from '../containers/BooksForm';\n\nconst App = () => (\n  <div className=\"App\">\n    <BooksList />\n    <BooksForm />\n  </div>\n);\n\nexport default App;\n","const books = (state = [], action) => {\n  switch (action.type) {\n    case 'CREATE_BOOK':\n      return [...state, action.book];\n    case 'REMOVE_BOOK':\n      return state.filter((currBook) => currBook.id !== action.book.id);\n    case 'LOAD_BOOKS':\n      return action.books;\n    default:\n      return state;\n  }\n};\n\nexport default books;\n","const filter = (state = 'All', { type, filter }) => {\n  switch (type) {\n    case 'CHANGE_FILTER':\n      return filter;\n    default:\n      return state;\n  }\n};\n\nexport default filter;\n","import { combineReducers } from 'redux';\nimport books from './book';\nimport filter from './filter';\n\nconst reducers = combineReducers({\n  books,\n  filter,\n});\n\nexport default reducers;\n","import logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\n\nconst initialState = {\n  books: [],\n  filter: 'All',\n};\n\nconst middleware = applyMiddleware(thunk, logger);\n\nconst store = createStore(reducers, initialState, middleware);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}