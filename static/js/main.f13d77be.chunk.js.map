{"version":3,"sources":["components/Book.js","redux/actions/index.js","config/index.js","components/CategoryFilter.js","components/Header.js","containers/BooksList.js","containers/BooksForm.js","components/App.js","redux/reducers/book.js","redux/reducers/filter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Book","book","handleRemoveBook","className","src","thumbnail","alt","category","title","id","type","onClick","actionTypes","bookCategories","Filter","handleFilterChange","htmlFor","onChange","event","target","value","categories","map","key","Header","children","BooksList","removeBook","props","filter","changeFilter","getRandomBooks","this","books","CategoryFilter","length","Component","mapDispatchToProps","fetchBooks","searchparams","a","fetch","response","ok","Error","statusText","json","fetchBooksByCategory","URLSearchParams","q","maxResults","fields","hasThumbnail","Boolean","volumeInfo","imageLinks","smallThumbnail","dispatch","Promise","all","then","booksByCategory","index","items","randomSampleSize","Math","floor","random","array","size","i","j","slice","sample","replace","generateBook","flat","connect","BooksForm","handleChange","name","setState","handleSubmit","preventDefault","state","createBook","uniqid","reset","renderCategories","disabled","hidden","onSubmit","placeholder","App","action","currBook","reducers","combineReducers","middleware","applyMiddleware","thunk","logger","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f13d77be.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Book = ({ book, handleRemoveBook }) => (\n  <div className=\"Book\">\n    <img src={book.thumbnail} alt=\"\" />\n    <div className=\"Book-category\">{book.category}</div>\n    <h2 className=\"Book-title\">{book.title}</h2>\n    <div className=\"Book-id\">{book.id}</div>\n    <button\n      className=\"Book-remove\"\n      type=\"button\"\n      onClick={() => handleRemoveBook(book)}\n    >\n      Remove\n    </button>\n  </div>\n);\n\nBook.propTypes = {\n  book: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    category: PropTypes.string,\n    thumbnail: PropTypes.string,\n  }).isRequired,\n  handleRemoveBook: PropTypes.func.isRequired,\n};\n\nexport default Book;\n","const actionTypes = {\n  CREATE_BOOK: 'CREATE_BOOK',\n  REMOVE_BOOK: 'REMOVE_BOOK',\n  CHANGE_FILTER: 'CHANGE_FILTER',\n  LOAD_BOOKS: 'LOAD_BOOKS',\n};\n\nconst createBook = (book) => ({\n  type: actionTypes.CREATE_BOOK,\n  book,\n});\n\nconst removeBook = (book) => ({\n  type: actionTypes.REMOVE_BOOK,\n  book,\n});\n\nconst changeFilter = (filter) => ({\n  type: actionTypes.CHANGE_FILTER,\n  filter,\n});\n\nconst getRandomBooks = (categories) => {\n  const fetchBooks = async (searchparams) => {\n    const response = await fetch(\n      `https://www.googleapis.com/books/v1/volumes?${searchparams}`\n    );\n    if (!response.ok) {\n      throw new Error(`Something went wrong ${response.statusText}`);\n    }\n    return response.json();\n  };\n\n  const fetchBooksByCategory = (category) => {\n    const searchparams = new URLSearchParams({\n      q: `subject:${category}`,\n      maxResults: 40,\n      fields: 'items(id,volumeInfo(title,imageLinks/smallThumbnail))',\n    });\n    return fetchBooks(searchparams);\n  };\n\n  const MAX_BOOKS_PER_CATEGORY = 3;\n\n  function sample(array, size) {\n    for (let i = array.length - 1; i > array.length - 1 - size; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array.slice(-size);\n  }\n\n  function hasThumbnail(book) {\n    return Boolean(book.volumeInfo.imageLinks?.smallThumbnail);\n  }\n\n  function generateBook(\n    {\n      id,\n      volumeInfo: {\n        title,\n        imageLinks: { smallThumbnail },\n      },\n    },\n    category\n  ) {\n    return {\n      id,\n      title,\n      thumbnail: smallThumbnail.replace(/^http:/, 'https:'),\n      category,\n    };\n  }\n\n  return (dispatch) => {\n    Promise.all(categories.map(fetchBooksByCategory)).then(\n      (booksByCategory) => {\n        dispatch({\n          type: actionTypes.LOAD_BOOKS,\n          books: booksByCategory\n            .map(({ items }, index) => {\n              const randomSampleSize = Math.floor(\n                Math.random() * MAX_BOOKS_PER_CATEGORY + 1\n              );\n              const categoryBooks = items\n                .filter(hasThumbnail)\n                .map((book) => generateBook(book, categories[index]));\n              return sample(categoryBooks, randomSampleSize);\n            })\n            .flat(),\n        });\n      }\n    );\n  };\n};\n\nexport { createBook, removeBook, changeFilter, getRandomBooks, actionTypes };\n","const bookCategories = [\n  'Action',\n  'Biography',\n  'History',\n  'Horror',\n  'Kids',\n  'Learning',\n  'Science Fiction',\n];\n\nexport default bookCategories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport categories from '../config';\n\nconst Filter = ({ handleFilterChange }) => (\n  <label htmlFor=\"filter\">\n    Category\n    <select\n      id=\"filter\"\n      onChange={(event) => handleFilterChange(event.target.value)}\n    >\n      {['All', ...categories].map((category) => (\n        <option key={category} value={category}>\n          {category}\n        </option>\n      ))}\n    </select>\n  </label>\n);\n\nFilter.propTypes = {\n  handleFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ children }) => (\n  <header>\n    <nav>\n      <h1>Bookstore CMS</h1>\n      {children}\n    </nav>\n  </header>\n);\n\nHeader.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook, getRandomBooks, changeFilter } from '../redux/actions';\nimport CategoryFilter from '../components/CategoryFilter';\nimport Header from '../components/Header';\nimport bookCategories from '../config';\n\nclass BooksList extends Component {\n  componentDidMount() {\n    const { getRandomBooks } = this.props;\n    getRandomBooks(bookCategories);\n  }\n\n  handleRemoveBook = (book) => {\n    const { removeBook } = this.props;\n    removeBook(book);\n  };\n\n  handleFilterChange = (filter) => {\n    const { changeFilter } = this.props;\n    changeFilter(filter);\n  };\n\n  render() {\n    const { books, filter } = this.props;\n    return (\n      <>\n        <Header>\n          <CategoryFilter\n            filter={filter}\n            handleFilterChange={this.handleFilterChange}\n          />\n        </Header>\n        <div className=\"BookList\">\n          {books.length === 0 ? (\n            <div>Loading...</div>\n          ) : (\n            books\n              .filter((book) => filter === book.category || filter === 'All')\n              .map((book) => (\n                <Book\n                  key={book.id}\n                  book={book}\n                  handleRemoveBook={this.handleRemoveBook}\n                />\n              ))\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      category: PropTypes.string,\n    })\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  getRandomBooks: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ books, filter }) => ({\n  books,\n  filter,\n});\n\nconst mapDispatchToProps = {\n  removeBook,\n  changeFilter,\n  getRandomBooks,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uniqid from 'uniqid';\nimport { connect } from 'react-redux';\nimport { createBook } from '../redux/actions';\nimport bookCategories from '../config';\n\nclass BooksForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      category: 'Category',\n    };\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, category } = this.state;\n    const { createBook } = this.props;\n    createBook({\n      id: uniqid(),\n      title,\n      category,\n    });\n    this.setState({\n      title: '',\n      category: 'Categories',\n    });\n    event.target.reset();\n  };\n\n  renderCategories = () =>\n    ['Category', ...bookCategories].map((category) => (\n      <option\n        disabled={category === 'Category'}\n        hidden={category === 'Category'}\n        key={category}\n        value={category}\n      >\n        {category}\n      </option>\n    ));\n\n  render() {\n    const { title, category } = this.state;\n    return (\n      <footer>\n        <form onSubmit={this.handleSubmit}>\n          <h4>Add new book</h4>\n          <div>\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              placeholder=\"Book title\"\n              value={title}\n              onChange={this.handleChange}\n            />\n            <select\n              name=\"category\"\n              id=\"category\"\n              value={category}\n              onChange={this.handleChange}\n              className={category === 'Category' ? 'inactive' : ''}\n            >\n              {this.renderCategories()}\n            </select>\n            <button type=\"submit\" value=\"\">\n              Add book\n            </button>\n          </div>\n        </form>\n      </footer>\n    );\n  }\n}\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  createBook,\n};\n\nexport default connect(null, mapDispatchToProps)(BooksForm);\n","import React from 'react';\nimport BooksList from '../containers/BooksList';\nimport BooksForm from '../containers/BooksForm';\n\nconst App = () => (\n  <div className=\"App\">\n    <BooksList />\n    <BooksForm />\n  </div>\n);\n\nexport default App;\n","import { actionTypes } from '../actions';\n\nconst books = (state = [], action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_BOOK:\n      return [...state, action.book];\n    case actionTypes.REMOVE_BOOK:\n      return state.filter((currBook) => currBook.id !== action.book.id);\n    case actionTypes.LOAD_BOOKS:\n      return action.books;\n    default:\n      return state;\n  }\n};\n\nexport default books;\n","import { actionTypes } from '../actions';\n\nconst filter = (state = 'All', { type, filter }) => {\n  switch (type) {\n    case actionTypes.CHANGE_FILTER:\n      return filter;\n    default:\n      return state;\n  }\n};\n\nexport default filter;\n","import { combineReducers } from 'redux';\nimport books from './book';\nimport filter from './filter';\n\nconst reducers = combineReducers({\n  books,\n  filter,\n});\n\nexport default reducers;\n","import logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\n\nconst initialState = {\n  books: [],\n  filter: 'All',\n};\n\nconst middleware = applyMiddleware(thunk, logger);\n\nconst store = createStore(reducers, initialState, middleware);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}