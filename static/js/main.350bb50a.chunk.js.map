{"version":3,"sources":["components/Book.js","api/googleBooksAPI.js","redux/actions/index.js","config/index.js","containers/BooksList.js","containers/BooksForm.js","components/CategoryFilter.js","components/Header.js","containers/App.js","redux/reducers/book.js","redux/reducers/filter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Book","book","handleRemoveBook","className","src","thumbnail","alt","category","title","id","type","onClick","fetchBooks","a","searchParams","endpoint","fetch","response","ok","Error","statusText","json","fetchBooksByCategory","URLSearchParams","q","maxResults","fields","getBookById","actionTypes","bookCategories","BooksList","removeBook","props","getRandomBooks","this","books","filter","length","reverse","map","key","Component","mapDispatchToProps","categories","hasThumbnail","Boolean","volumeInfo","imageLinks","smallThumbnail","dispatch","Promise","all","then","booksByCategory","index","items","randomSampleSize","Math","floor","random","array","size","i","j","slice","sample","replace","generateBook","flat","connect","BooksForm","debounce","func","delay","timeout","args","clearTimeout","setTimeout","apply","autocomplete","value","searchBooksByTitle","bookSuggestions","totalItems","item","setState","suggestionsCache","suggestions","set","trim","handleOnKeyUp","event","state","target","has","get","debouncedAutocomplete","handleOnChange","name","option","document","querySelector","dataset","handleSubmit","preventDefault","persist","createBook","uniqid","reset","renderCategories","Map","onSubmit","list","placeholder","onChange","onKeyUp","aria-label","data-id","Filter","handleFilterChange","htmlFor","Header","children","App","changeFilter","CategoryFilter","React","action","currBook","reducers","combineReducers","middleware","applyMiddleware","thunk","logger","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.350bb50a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Book = ({ book, handleRemoveBook }) => (\n  <div className=\"Book\">\n    <img src={book.thumbnail} alt=\"\" />\n    <div className=\"Book-category\">{book.category}</div>\n    <h2 className=\"Book-title\">{book.title}</h2>\n    <div className=\"Book-id\">{book.id}</div>\n    <button\n      className=\"Book-remove\"\n      type=\"button\"\n      onClick={() => handleRemoveBook(book)}\n    >\n      Remove\n    </button>\n  </div>\n);\n\nBook.propTypes = {\n  book: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    category: PropTypes.string,\n    thumbnail: PropTypes.string,\n  }).isRequired,\n  handleRemoveBook: PropTypes.func.isRequired,\n};\n\nexport default Book;\n","const fetchBooks = async ({ searchParams, endpoint = '' }) => {\n  const response = await fetch(\n    `https://www.googleapis.com/books/v1/volumes/${endpoint}?${searchParams}`\n  );\n  if (!response.ok) {\n    throw new Error(`Something went wrong ${response.statusText}`);\n  }\n  return response.json();\n};\n\nconst fetchBooksByCategory = (category) => {\n  const searchParams = new URLSearchParams({\n    q: `subject:${category}`,\n    maxResults: 40,\n    fields: 'items(id,volumeInfo(title,imageLinks/smallThumbnail))',\n  });\n  return fetchBooks({ searchParams });\n};\n\nconst searchBooksByTitle = (title) => {\n  const searchParams = new URLSearchParams({\n    q: `intitle:${title}`,\n    fields: 'totalItems,items(id,volumeInfo/title)',\n  });\n  return fetchBooks({ searchParams });\n};\n\nconst getBookById = (id) => {\n  const searchParams = new URLSearchParams({\n    fields: 'id,volumeInfo(title,imageLinks/smallThumbnail)',\n  });\n  return fetchBooks({ endpoint: `${id}`, searchParams });\n};\n\nexport { fetchBooksByCategory, searchBooksByTitle, getBookById };\n","import { fetchBooksByCategory } from '../../api/googleBooksAPI';\n\nconst actionTypes = {\n  CREATE_BOOK: 'CREATE_BOOK',\n  REMOVE_BOOK: 'REMOVE_BOOK',\n  CHANGE_FILTER: 'CHANGE_FILTER',\n  LOAD_BOOKS: 'LOAD_BOOKS',\n};\n\nconst createBook = (book) => ({\n  type: actionTypes.CREATE_BOOK,\n  book,\n});\n\nconst removeBook = (book) => ({\n  type: actionTypes.REMOVE_BOOK,\n  book,\n});\n\nconst changeFilter = (filter) => ({\n  type: actionTypes.CHANGE_FILTER,\n  filter,\n});\n\nconst getRandomBooks = (categories) => {\n  const MAX_BOOKS_PER_CATEGORY = 3;\n\n  function sample(array, size) {\n    for (let i = array.length - 1; i > array.length - 1 - size; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array.slice(-size);\n  }\n\n  function hasThumbnail(book) {\n    return Boolean(book.volumeInfo.imageLinks?.smallThumbnail);\n  }\n\n  function generateBook(\n    {\n      id,\n      volumeInfo: {\n        title,\n        imageLinks: { smallThumbnail },\n      },\n    },\n    category\n  ) {\n    return {\n      id,\n      title,\n      thumbnail: smallThumbnail.replace(/^http:/, 'https:'),\n      category,\n    };\n  }\n\n  return (dispatch) => {\n    Promise.all(categories.map(fetchBooksByCategory)).then(\n      (booksByCategory) => {\n        dispatch({\n          type: actionTypes.LOAD_BOOKS,\n          books: booksByCategory\n            .map(({ items }, index) => {\n              const randomSampleSize = Math.floor(\n                Math.random() * MAX_BOOKS_PER_CATEGORY + 1\n              );\n              const categoryBooks = items\n                .filter(hasThumbnail)\n                .map((book) => generateBook(book, categories[index]));\n              return sample(categoryBooks, randomSampleSize);\n            })\n            .flat(),\n        });\n      }\n    );\n  };\n};\n\nexport { createBook, removeBook, changeFilter, getRandomBooks, actionTypes };\n","const bookCategories = [\n  'Action',\n  'Biography',\n  'History',\n  'Horror',\n  'Kids',\n  'Learning',\n  'Science Fiction',\n];\n\nexport default bookCategories;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Book from '../components/Book';\nimport { removeBook, getRandomBooks } from '../redux/actions';\nimport bookCategories from '../config';\n\nclass BooksList extends Component {\n  componentDidMount() {\n    const { getRandomBooks } = this.props;\n    getRandomBooks(bookCategories);\n  }\n\n  handleRemoveBook = (book) => {\n    const { removeBook } = this.props;\n    removeBook(book);\n  };\n\n  render() {\n    const { books, filter } = this.props;\n    return (\n      <>\n        <div className=\"BookList\">\n          {books.length === 0 ? (\n            <div>Loading...</div>\n          ) : (\n            books\n              .filter((book) => filter === book.category || filter === 'All')\n              .reverse()\n              .map((book) => (\n                <Book\n                  key={book.id}\n                  book={book}\n                  handleRemoveBook={this.handleRemoveBook}\n                />\n              ))\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nBooksList.propTypes = {\n  books: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      category: PropTypes.string,\n    })\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  getRandomBooks: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ books, filter }) => ({\n  books,\n  filter,\n});\n\nconst mapDispatchToProps = {\n  removeBook,\n  getRandomBooks,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uniqid from 'uniqid';\nimport { connect } from 'react-redux';\nimport { createBook } from '../redux/actions';\nimport bookCategories from '../config';\nimport { searchBooksByTitle, getBookById } from '../api/googleBooksAPI';\n\nclass BooksForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      category: bookCategories[0],\n      id: '',\n      suggestions: [],\n      suggestionsCache: new Map(),\n    };\n    this.debouncedAutocomplete = this.debounce(this.autocomplete, 250);\n  }\n\n  debounce = (func, delay) => {\n    let timeout = null;\n    return function _(...args) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func.apply(this, args);\n      }, delay);\n    };\n  };\n\n  autocomplete = (value) => {\n    searchBooksByTitle(value).then((books) => {\n      const bookSuggestions =\n        books.totalItems > 0\n          ? books.items.map((item) => ({\n              id: item.id,\n              title: item.volumeInfo.title,\n            }))\n          : [];\n      this.setState(({ suggestionsCache }) => {\n        return {\n          suggestions: bookSuggestions,\n          suggestionsCache: suggestionsCache.set(value.trim(), bookSuggestions),\n        };\n      });\n    });\n  };\n\n  handleOnKeyUp = (event) => {\n    const { suggestionsCache } = this.state;\n    const { value } = event.target;\n\n    if (suggestionsCache.has(value.trim())) {\n      this.setState({\n        suggestions: suggestionsCache.get(value.trim()),\n      });\n      return;\n    }\n\n    this.debouncedAutocomplete(value);\n  };\n\n  handleOnChange = (event) => {\n    const { name, value } = event.target;\n    const option = document.querySelector(`option[value=\"${value}\"]`);\n    this.setState({\n      [name]: value,\n      suggestions: [],\n      id: option?.dataset.id || '',\n    });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    event.persist();\n\n    const { title, category, id } = this.state;\n    const { createBook } = this.props;\n    if (id !== '') {\n      const book = await getBookById(id);\n      createBook({\n        id: book.id,\n        title: book.volumeInfo.title,\n        thumbnail: book.volumeInfo.imageLinks.smallThumbnail,\n        category,\n      });\n    } else {\n      createBook({\n        id: uniqid(),\n        title,\n        category,\n      });\n    }\n    this.setState({\n      title: '',\n      category,\n    });\n    event.target.reset();\n  };\n\n  renderCategories = () =>\n    bookCategories.map((category) => (\n      <option key={category} value={category}>\n        {category}\n      </option>\n    ));\n\n  render() {\n    const { title, category, suggestions } = this.state;\n    return (\n      <div className=\"form\">\n        <form onSubmit={this.handleSubmit}>\n          <h4>Add new book</h4>\n          <div>\n            <input\n              list=\"titles\"\n              type=\"text\"\n              id=\"title\"\n              placeholder=\"Book title\"\n              value={title}\n              onChange={this.handleOnChange}\n              onKeyUp={this.handleOnKeyUp}\n              aria-label=\"title\"\n              name=\"title\"\n            />\n            <datalist id=\"titles\">\n              {suggestions.map(({ id, title }) => (\n                <option\n                  aria-label=\"title suggestions\"\n                  key={id}\n                  data-id={id}\n                  value={title}\n                />\n              ))}\n            </datalist>\n            <select\n              name=\"category\"\n              aria-label=\"category\"\n              id=\"category\"\n              value={category}\n              onChange={this.handleOnChange}\n            >\n              {this.renderCategories()}\n            </select>\n            <button type=\"submit\" value=\"\">\n              Add book\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  createBook,\n};\n\nexport default connect(null, mapDispatchToProps)(BooksForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport categories from '../config';\n\nconst Filter = ({ handleFilterChange }) => (\n  <label htmlFor=\"filter\">\n    Category\n    <select\n      id=\"filter\"\n      onChange={(event) => handleFilterChange(event.target.value)}\n    >\n      {['All', ...categories].map((category) => (\n        <option key={category} value={category}>\n          {category}\n        </option>\n      ))}\n    </select>\n  </label>\n);\n\nFilter.propTypes = {\n  handleFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ children }) => (\n  <header>\n    <nav>\n      <h1>Bookstore CMS</h1>\n      {children}\n    </nav>\n  </header>\n);\n\nHeader.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport BooksList from './BooksList';\nimport BooksForm from './BooksForm';\nimport CategoryFilter from '../components/CategoryFilter';\nimport Header from '../components/Header';\nimport { changeFilter } from '../redux/actions';\n\nclass App extends React.Component {\n  handleFilterChange = (filter) => {\n    const { changeFilter } = this.props;\n    changeFilter(filter);\n  };\n\n  render() {\n    const { filter } = this.props;\n    return (\n      <div className=\"App\">\n        <Header>\n          <CategoryFilter\n            filter={filter}\n            handleFilterChange={this.handleFilterChange}\n          />\n        </Header>\n        <BooksForm />\n        <BooksList />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ books, filter }) => ({\n  books,\n  filter,\n});\n\nconst mapDispatchToProps = {\n  changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { actionTypes } from '../actions';\n\nconst books = (state = [], action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_BOOK:\n      return [...state, action.book];\n    case actionTypes.REMOVE_BOOK:\n      return state.filter((currBook) => currBook.id !== action.book.id);\n    case actionTypes.LOAD_BOOKS:\n      return action.books;\n    default:\n      return state;\n  }\n};\n\nexport default books;\n","import { actionTypes } from '../actions';\n\nconst filter = (state = 'All', { type, filter }) => {\n  switch (type) {\n    case actionTypes.CHANGE_FILTER:\n      return filter;\n    default:\n      return state;\n  }\n};\n\nexport default filter;\n","import { combineReducers } from 'redux';\nimport books from './book';\nimport filter from './filter';\n\nconst reducers = combineReducers({\n  books,\n  filter,\n});\n\nexport default reducers;\n","import logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\n\nconst initialState = {\n  books: [],\n  filter: 'All',\n};\n\nconst middleware = applyMiddleware(thunk, logger);\n\nconst store = createStore(reducers, initialState, middleware);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './containers/App';\nimport store from './redux/store';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}